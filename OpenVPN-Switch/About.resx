<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label2.Text" xml:space="preserve">
    <value>OpenVPN Switcher is in no way tied to OpenVPN and or the OpenVPN project. 
This tool was created as a method of switching “automagicly” between OpenVPN 
config files for failover and or anonymity. I am not responsible for any actions 
taken and or issues with this software if and or when you decide to use this tool. 
By using this software, you agree that any/all issues and or concerns that may arise
are at your own risk. 




MIT License

Copyright (c) 2021 BitNix LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND 
NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
OTHER DEALINGS IN THE SOFTWARE.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB8AAAEAIAAkEAAAFgAAACgAAAAgAAAAPgAAAAEAIAAAAAAAgA8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlOBoAZTgaAGU4GgAAAAAAAAAAACCC9RMggvW3IIL16yCC
        9fgggvX+IIL1/iCC9fgggvXtIIL1riCC9QwAAAAAAAAAAGU4GgBlOBoAZTgaAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlOBoAZTgaAGU4GgNlOBo5ZTgaFQAAAAAAAAAAIIL1CyCC
        9cIggvX/IIL1/yCC9f8ggvX/IIL1/yCC9f8ggvWuIIL1BAAAAABlOBoAZTgaKmU4GkdlOBoEZTgaAGU4
        GgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZTgaAGU4GgBlOBoQZTgag2U4GullOBpZZTgaAAAA
        AAAggvUBIIL1nCCC9f8ggvX/IIL1/yCC9f8ggvX/IIL1/yCC9YUggvUAAAAAAGU4GgBlOBp+ZTga8GU4
        GoplOBoTZTgaAGU4GgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlOBoAZTgaGWU4GqZlOBr9ZTga/2U4
        GqBlOBoDAAAAACCC9QAggvV0IIL1/yCC9f8ggvX/IIL1/yCC9f8ggvX9IIL1XCCC9QAAAAAAZTgaCWU4
        GrplOBr/ZTga/mU4Gq1lOBodZTgaAAAAAAAAAAAAAAAAAAAAAAAAAAAAZTgaAGU4GhVlOBqrZTga/2U4
        Gv9lOBr/ZTga3GU4Gh4AAAAAAAAAACCC9U4ggvX6IIL1/yCC9f8ggvX/IIL1/yCC9fEggvU4AAAAAAAA
        AABlOBoqZTga6GU4Gv9lOBr/ZTga/2U4GrNlOBoZZTgaAAAAAAAAAAAAAAAAAGU4GgBlOBoIZTgak2U4
        Gv5lOBr/ZTga/2U4Gv9lOBr7ZTgaV2U4GgAAAAAAIIL1LiCC9esggvX/IIL1/yCC9f8ggvX/IIL13CCC
        9RwAAAAAZTgaAGU4GmFlOBr9ZTga/2U4Gv9lOBr/ZTga/2U4GpxlOBoKZTgaAAAAAAAAAAAAZTgaAGU4
        Gl1lOBr2ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBqfZTgaAwAAAAAggvUVIIL11CCC9f8ggvX/IIL1/yCC
        9f8ggvW9IIL1CQAAAABlOBoDZTgaoWU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga+GU4GmZlOBoAAAAAAGU4
        GgBlOBodZTga0mU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4GttlOBoeAAAAACCC9QYggvW0IIL1/yCC
        9f8ggvX/IIL1/yCC9ZgggvUBAAAAAGU4GhllOBrXZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga2GU4
        GiJlOBoAZTgaAGU4GnZlOBr+ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/GU4GlIAAAAAIIL1ACCC
        9Y8ggvX/IIL1/yCC9f8ggvX/IIL1byCC9QAAAAAAZTgaRWU4GvhlOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr+ZTgaf2U4GgFlOBoXZTgazGU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBrNZTgaKgAA
        AAAggvUAIIL1ZiCC9f4ggvX/IIL1/yCC9fgggvVHIIL1AAAAAABlOBokZTgayGU4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBrSZTgaHGU4GlNlOBr1ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga6WU4
        GkBlOBoAIIL1ACCC9QAggvVOIIL1+SCC9f8ggvX/IIL17SCC9TgggvUAIIL1AGU4GgBlOBo5ZTga5WU4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4GvhlOBpcZTgalmU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBqMZTgaAmU4GgAggvUAIIL1QiCC9ckggvX+IIL1/yCC9f8ggvX8IIL1yCCC9UMggvUAZTgaAGU4
        GgFlOBqDZTga/mU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4GqBlOBrJZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga7WU4GjVlOBoAIIL1ACCC9TQggvXdIIL1/yCC9f8ggvX/IIL1/yCC9f8ggvX/IIL13SCC
        9TMggvUAZTgaAGU4Gi5lOBrpZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga0mU4GudlOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBrIZTgaDgAAAAAggvUFIIL1oiCC9f8ggvX/IIL1/yCC9f8ggvX/IIL1/yCC
        9f8ggvX/IIL1oCCC9QUAAAAAZTgaC2U4GsFlOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBrvZTga9WU4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4GqxlOBoDAAAAACCC9R0ggvXeIIL1/yCC9f8ggvX/IIL1/yCC
        9f8ggvX/IIL1/yCC9f8ggvXcIIL1HAAAAABlOBoBZTgao2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        GvxlOBr3ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTgaqGU4GgIAAAAAIIL1KyCC9esggvX/IIL1/yCC
        9f8ggvX/IIL1/yCC9f8ggvX/IIL1/yCC9ekggvUpAAAAAGU4GgBlOBqfZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/mU4Gu5lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBq7ZTgaCAAAAAAggvUdIIL13SCC
        9f8ggvX/IIL1/yCC9f8ggvX/IIL1/yCC9f8ggvX/IIL12yCC9RsAAAAAZTgaBWU4GrRlOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr1ZTga1mU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4GuBlOBohZTgaACCC
        9QUggvWiIIL1/yCC9f8ggvX/IIL1/yCC9f8ggvX/IIL1/yCC9f8ggvWfIIL1BGU4GgBlOBocZTga2mU4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gt9lOBqrZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga+2U4
        GmZlOBoAIIL1ACCC9TQggvXdIIL1/yCC9f8ggvX/IIL1/yCC9f8ggvX/IIL13CCC9TIggvUAZTgaAGU4
        Gl1lOBr6ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTgatWU4Gm1lOBr7ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTgazGU4GhtlOBoAIIL1ACCC9UMggvXHIIL1+yCC9f8ggvX/IIL1+iCC9cYggvVBIIL1AGU4
        GgBlOBoXZTgaxmU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv1lOBp2ZTgaK2U4GuBlOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr+ZTgamWU4GgxhPCYAIIL0ACCC9RcggvVWIIL1gCCC9YAggvVVIIL1FiCC
        9ABhPCYAZTgaCmU4GpJlOBr9ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga5WU4GjFlOBoEZTgammU4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr6ZTgalmU4GhhlORwAQ1yFACN/6wAggvQAIIL0ACN/
        7ABDXYcAZTgbAGU4GhZlOBqPZTga+WU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBqjZTgaBmU4
        GgBlOBo6ZTga7GU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr+ZTgaxGU4GlllOBoYZTgaAmU4
        GgBlOBoAZTgaAmU4GhZlOBpWZTgawGU4Gv1lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga8GU4
        GkFlOBoAAAAAAGU4GgRlOBqPZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga+WU4
        GtRlOBqnZTgajGU4GotlOBqlZTga0WU4GvhlOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBqXZTgaBmU4GgAAAAAAZTgaAGU4Gh1lOBrHZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTgazWU4GiFlOBoAAAAAAAAAAAAAAAAAZTgaAGU4GjplOBrdZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4GuFlOBpAZTgaAAAAAAAAAAAAAAAAAAAAAABlOBoAZTgaAGU4GkdlOBrdZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBrhZTgaTWU4GgBlOBoAAAAAAAAAAAAAAAAAAAAAAAAAAABlOBoAZTgaAGU4
        GjtlOBrHZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTgazGU4GkBlOBoAZTgaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABlOBoAZTgaAGU4Gh5lOBqQZTga7GU4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr/ZTga7mU4GpZlOBohZTgaAGU4GgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABlOBoAZTgaAGU4GgRlOBo9ZTganmU4GuJlOBr8ZTga/2U4Gv9lOBr/ZTga/2U4
        Gv9lOBr/ZTga/2U4Gv9lOBr9ZTga5GU4GqJlOBpBZTgaBWU4GgBlOBoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZTgaAGU4GgBlOBoEZTgaL2U4GnRlOBq1ZTga4GU4
        GvhlOBr/ZTga/2U4GvhlOBrhZTgat2U4GndlOBoyZTgaBWU4GgBlOBoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/gB//8YAY/+GAOH/AwDA/gMAwHwDAMA8AQCAOAEAgBgBgYAAAYGAAAOBwAADAMAABg
        BgAAQAIAAEACAABAAwAAQAIAAEACAABgBgAAMAwAABgYAAAP8ACAAYABgAAAAcAAAAPgAAAH8AAAD/gA
        AB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>